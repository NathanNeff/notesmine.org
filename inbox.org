* Inbox

** Tmux stuck in overwrite mode
[2020-01-15 Wed 16:47]
export TERM=screen

(I wonder if export TERM=tmux works?)
https://stackoverflow.com/questions/39088240/stuck-in-overwrite-mode-in-tmux
--

* Tmux attach to a grouped session

https://unix.stackexchange.com/questions/24274/attach-to-different-windows-in-session
tmux new-session -t "session name of other session"

* Tmux display all options

There are global options and session options and server options.  Typically server
options are not what you're looking for

tmux show-options -g
tmux show-options  # This only shows options different than global

* todo This should go into notesmine
:LOGBOOK:
- State "todo"       from              [2019-11-13 Wed 17:14]
:END:


Searching for stuff using agenda search

+foo+bar doesn't work.  You need to use +foo +bar (with a space)

1) Create a link for org-search

* functional programming fundamentals
[2019-12-10 Tue 22:20]
clocked: 
from: 

Functional Programming Essentials by Kelley Robinson
https://www.youtube.com/watch?v=Yc6nJZK39mU&t=2230
this video looks good
--
* Keeping domain server and mail server separate
[2019-08-13 Tue 10:54]

https://www.bayleafdigital.com/configure-email-hosted-different-server-website-2/


--
* Using Org-mode code blocks                                       :org:mode:
[2018-08-13 Mon 09:30]
https://emacs.stackexchange.com/questions/5613/how-to-convert-lines-to-an-org-mode-checklist

* Unix Magic Show Phillip Zeyliger
https://cloudera.app.box.com/s/rc3p8az6r583qhlg7ixab57z8vg2xb27/file/279101357902


* Cloudcat overview                                                :artifact:
[2018-08-17 Fri 14:43]
https://docs.google.com/presentation/d/1LXVrwC14-XOhWwSY82uGjOsiZhSiCm9gUD1zS0Zlc1U/edit#slide=id.p4
* todo Henry Robinson Unreasonable Effectiveness of SQL Engines :impala:interesting:whitepaper:
:LOGBOOK:
- State "todo"       from "TODO"       [2019-11-03 Sun 13:25]
:END:

Find on Wiki


* CGroup Case Studies
[2018-08-15 Wed 06:18]
And bug report from Brian Baillod is in email from Aug. 8 under "performance-tuning"

* log4j set explicit custom logfile                           :for_faq:log4j:
[2018-12-29 Sat 16:50]
Might not be the best way to do this, but. . . . .

Example is in http://github.mtv.cloudera.com/EDU/dell-kafka-custom-vm/tree/master/demos/isr-versus-acks

Basically set thisErrorLog on commandline:
export KAFKA_OPTS="-Dlog4j.configuration=file:log4j.properties.trace -DthisErrorLog=prodAckONE.log"
kafka-console-producer --broker-list $BOOTSTRAP_SERVERS \
    --topic not_enough_isrs \

And use this log4j.properties:

log4j.rootLogger=TRACE, fileAppender
log4j.appender.fileAppender=org.apache.log4j.FileAppender
log4j.appender.fileAppender.File=${thisErrorLog}
log4j.appender.fileAppender.Append=False

log4j.appender.fileAppender.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.fileAppender.layout.ConversionPattern= %-4r [%t] %-5p %c - %m%n


* GNUPlot scripts for charting
[2018-11-09 Fri 11:10]
and python script for generating html file with charts for kafka
course is in 

~/Box Sync/Shared/KafkaCourse

chart-metric.sh
generate-charts.py
* todo Read org-mode hacks                                         :@org:res:
[2019-10-15 Tue 09:04]
from: [[file:~/classes.org::*Contact%20customer][Contact customer]]

It's in my ~/Documents/Geek
--
* Taming your todo list
Great cartoon from Sacha Chua on taming your todo list
http://www.emacslife.com/baby-steps-org.html


Found GTD workflow from Charles on org-mode website:
http://members.optusnet.com.au/~charles57/GTD/gtd_workflow.html

[[id:E6A2141A-69D0-44B6-8BC2-BBFC607B9A92][Org GTD from Charles]]

* Bash - Forget History

https://unix.stackexchange.com/questions/10922/temporarily-suspend-bash-history-on-a-given-shell

#+begin_src bash
unset HISTFILE
set +o history
set -o history
#+end_src



Also, if you put a space before a command it's not recorded in history (for BASH)
But, you must have that option enabled.  See HISTIGNORE here:
https://www.gnu.org/software/bash/manual/html_node/Bash-History-Facilities.html#Bash-History-Facilities
  
** What's up with =set +o= versus =set -o=
=set +o= will /un/ set an option :-/
=set -o= will /set/ an option :-/
  https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
  
See man pages for set (it's at the bottom)

=man set=

* Linux


  ls /

* Vim

** Do not prompt to save if buffer was read from STDIN

Quite frequently, I use vim as a substitute for `less` and `more`.

    $ git log | vim -

When I quit vim, I get a prompt that says "No write since last change".

I want to avoid this.

See this Stack Overflow link:
- https://vi.stackexchange.com/questions/2725/how-to-force-quit-if-input-was-stdin#2726
  - A user posted this link:
    -https://gitlab.com/phunehehe/my-env/blob/6fba38e4af8cdae3938c6b1c4592186ecbbffcdd/vim/vimrc#L92-93

#+begin_src vim
autocmd StdinReadPost * set buftype=nofile
#+end_src

* Emacs Evil mode tutorial github
[2020-01-08 Wed 13:16]

https://github.com/noctuid/evil-guide#hooks--

* Git Tags




* Spark Structured Streaming



** DataFrameWriter

https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.streaming.DataStreamWriter

Output Sinks: e.g. truncate options
https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html#output-sinks


* 
* Awesome!  Show variables I've defined in iPython:

=%who=

https://stackoverflow.com/questions/633127/viewing-all-defined-variables

Use %reset to clear stuff

https://stackoverflow.com/questions/26545051/is-there-a-way-to-delete-created-variables-functions-etc-from-the-memory-of-th

* Python UDFs

https://changhsinlee.com/pyspark-udf/


* Vim:  Jump to most recently edited file

Use =`0=

* Vim: Clearing the history
 
https://stackoverflow.com/questions/2816719/clear-certain-criteria-from-viminfo-file
* Ack: Ignore graffle and fo files


 put this in .ackrc
# Ignore fo files
--ignore-file=ext:fo
--ignore-file=ext:graffle

* Git:  Show files in git log

git log --compact-summary

- Use grep to search commit text

git log --grep idempotent
* Git ignore files temporarily


git update-index --assume-unchanged <path-to-file>
git update-index --no-assume-unchanged <path-to-file>

https://stackoverflow.com/questions/13442130/git-temporarily-ignore-trivial-changes-to-files#26549583
https://git-scm.com/docs/git-update-index#_using_assume_unchanged_bit

* Git: Configure a user-based ignore file

git config --global core.excludesfile ~/.gitignore

https://stackoverflow.com/questions/4824188/git-ignore-vim-temporary-files

* Misc.

ntpstat

cat /proc/sys/vm/swappiness
cat /proc/meminfo | grep -i hugepages_total

# disable 
echo never > /sys/kernel/mm/transparent_hugepage/defrag 
echo never > /sys/kernel/mm/transparent_hugepage/enabled 

* Searching files from org-mode                           :link:org:org_mode:
[2019-07-29 Mon 23:56]

This stack overflow conversation asks basically what I'm looking for:

A way to search my org-mode files easily and bringing up a helm
interface with the search results.

I'm currently using a helm function to do this, but it's a bit clunky
https://emacs.stackexchange.com/questions/10012/a-search-interface-for-org-mode-files

--


* Toward Data Science Python Portfolio Analysis

https://towardsdatascience.com/python-for-finance-stock-portfolio-analyses-6da4c3e61054

and this is a good blog as well (referred by the above blog)
https://pbpython.com/

* Magit

Use the vim diff command to see the total number of additions / deletions from the CWD


* How to run emacs with a different inti file
evn HOME=~/tmp/emacs --chdir=/Users/ShareDir/CurClass &

* Emacs lisp play with files and buffers

#+begin_src emacs-lisp :results table
(defun read-lines (filePath)
  "Return a list of lines of a file at filePath."
  (with-temp-buffer
    (insert-file-contents filePath)
    (split-string (buffer-string) "\n" t)))

(setq njn-org-agenda-file "org-agenda-files.org")
(setq njn-org-agenda-ignore-file "org-agenda-files-ignore.org")

(setq agenda-files-buffer (get-file-buffer njn-org-agenda-file))
(if agenda-files-buffer
    (and (buffer-modified-p agenda-files-buffer) (save-buffer agenda-files-buffer)))

(setq ignore-buffer (get-file-buffer njn-org-agenda-ignore-file))
(if ignore-buffer
    (and (buffer-modified-p ignore-buffer) (save-buffer ignore-buffer)))

(setq njn-agenda-file-entries (read-lines njn-org-agenda-file))
(setq njn-agenda-ignore-file-entries (read-lines njn-org-agenda-ignore-file))
#+end_src
